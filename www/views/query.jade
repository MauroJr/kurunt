
script(src='/javascripts/query.js')
link(rel='stylesheet', href='/stylesheets/query.css')

div#query
	- if ( values['tables'] != undefined && values['tables'].length > 0 ) {
	//- g.dump(values);
	- var option_query_max_matches = config['sphinx_query_max_matches'];
	div.container
		
		form(method="get", name="queryfm", id="queryfm")
			- var table = '';
			p.select_table
				label(for="table") Table (data): 
				select(name="table", id="table", onchange="changeTable(this.options[selectedIndex].text, #{option_query_max_matches})")
					- for ( var x in values['tables'] )
						table = values['tables'][0];
						- if ( values['table'] == values['tables'][x] ) {
						option(selected) #{values['tables'][x]}
						- table = values['tables'][x];
						- } else {
						option() #{values['tables'][x]}
						- }

			h2= title

			- var sql = 'SELECT * FROM ' + table + ' ORDER BY id DESC LIMIT 0, 10 OPTION max_matches = ' + option_query_max_matches;
			- if ( values['sql'] != undefined ) {
				- sql = values['sql'];
			- }
			p
				textarea(name="sql")= sql

			p
				input.submit1(type="button", value="Run Query", onclick="sqlfmSubmit(queryfm.elements['table'].value);") 
				- if ( values['error'] == undefined ) {
					- if ( values['matrix'] != undefined ) {
						- if ( values['matrix']['time'] != undefined ) {
							span.took Query took (#{values['matrix']['time']} seconds).
						- }
					- }
				- }


	div.container
		
		- if ( values['error'] == undefined ) {
			- if ( values['matrix'] != undefined ) {
				span.found Found: #{values['matrix']['found']} of #{values['matrix']['total_found']}.
			- }
		- }	
		h2 Results
		

		div.results
			- if ( values['error'] == undefined && values['matrix'] != undefined ) {
				- var matrix = values['matrix'];
			div.matrix 	
				table
					thead
						tr
							th.row_num_th -
							- for (var key in matrix['table'][0]) {
								//- var keylink = "<td class='header'><a href=\"?table="+values['table']+"&sql=SELECT+*+FROM+"+values['table']+"+WHERE+"+key+"+!=+0+GROUP+BY+"+key+"+ORDER+BY+@count+DESC+LIMIT+0%2C+30+OPTION+max_matches+%3D+\">"+key+"</a></td>";

							th
								- if ( key == 'id' || key == 'weight' || key.substring(0, 1) == '@' ) {
									#{key}
								- } else {
									a(href = '?table=' + values['table'] + '&sql=SELECT+*+FROM+' + values['table'] + '+WHERE+' + key + '+!=+0+GROUP+BY+' + key + '+ORDER+BY+@count+DESC+LIMIT+0%2C+10+OPTION+max_matches+%3D+' + option_query_max_matches) #{key}
								- }
							- }

					tbody
						
						//- g.dump(matrix);
		
						- for (var item in matrix['table']) {
						//-	console.log( '\nitem: ' + item + ' id: ' + matrix['table'][item]['id'].value );
						
						- var alternate = '';
						- if (item%2 != 0) {
						-	alternate = 'alternate';
						- }					
						
				
						
						tr
							- var item_num = parseInt(item) + 1;
							td.row_num #{item_num}
							- for (var key in matrix['table'][item]) {
							
							- var isNum = '';
							- if (matrix['table'][item][key].value == matrix['table'][item][key].real_value) {
							-	isNum = 'is_num';
							- }
							
							
							- if ( key == 'weight' || key.substring(0, 1) == '@' ) { 
								td(class='#{alternate} #{isNum}') 
									#{matrix['table'][item][key].real_value}
							- } else { 
								td(class='#{alternate} #{isNum}') 
									a(href = '?table=' + values['table'] + '&sql=SELECT+*+FROM+' + values['table'] + '+WHERE+' + key + '+=+' + matrix['table'][item][key].value + '+ORDER+BY+id+DESC+LIMIT+0%2C+10+OPTION+max_matches+%3D+' + option_query_max_matches) #{matrix['table'][item][key].real_value}
							- }			

							- }
						- }
			- }	
			- if ( values['error'] != undefined ) {
				p 
					strong Error: 
					#{values['error']}
			- }
			
				
				
			- if ( values['error'] == undefined && values['matrix'] != undefined ) {
				- if ( values['matrix']['found'] < values['matrix']['total_found']  ) {
					- var by = values['by'];
					//- if ( page == undefined ) {
					//	- page = 1;
					//- }
					//- var nextpage = page + 1;
					
			p.toggle 	
					
					a(href="?table=" + values['table'] + '&sql=' + encodeURIComponent(values['matrix']['sql_first'])) First
					span.spacelinks
						a(href="?table=" + values['table'] + '&sql=' + encodeURIComponent(values['matrix']['sql_prev'])) &lt; Prev
					span.spacelinks
						- var row_to = parseInt(values['matrix']['limit_to'] + values['matrix']['limit_from']);
						- if ( row_to >= parseInt(values['matrix']['total_found']) ) {
							- row_to = values['matrix']['total_found'];
						- }
						\(Rows #{values['matrix']['limit_from']} - #{row_to} of #{values['matrix']['total_found']})
					span.spacelinks
						a(href="?table=" + values['table'] + '&sql=' + encodeURIComponent(values['matrix']['sql_next'])) Next &gt;
					span.spacelinks
						a(href="?table=" + values['table'] + '&sql=' + encodeURIComponent(values['matrix']['sql_last'])) Last
				- }
			- }
			
	- } else {
		div.container
			div.tip
				p No 
					a(href="/data/") data
					|  has been setup to query!
	- }		